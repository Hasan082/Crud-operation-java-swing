/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package databaseclass;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hasan
 */
public final class ShowDataTable extends javax.swing.JFrame {

    
    
    public ShowDataTable() {
        
        initComponents();
        setSize(800, 600);
        setLocationRelativeTo(null);
        dataShowInTable();
        
    }
    
    public void dataShowInTable() {
        
    try (Connection conn = Connector.connectDB();
         PreparedStatement ps = conn.prepareStatement("SELECT * FROM datatable");
         ResultSet rs = ps.executeQuery()) {

        DefaultTableModel tableModel = new DefaultTableModel(new String[]{"id", "name", "age", "gender"}, 0);
        ShowTable.setModel(tableModel);

        while (rs.next()) {
            String id = rs.getString("id");
            String name = rs.getString("name");
            String age = rs.getString("age");
            String gender = rs.getString("gender");

            tableModel.addRow(new Object[]{id, name, age, gender});
        }

    } catch (SQLException e) {
        Logger.getLogger(ShowDataTable.class.getName()).log(Level.SEVERE, "Error is: ", e);
    }
}

    


    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ShowTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        SearchDataAll = new javax.swing.JButton();
        GoHomeAll = new javax.swing.JButton();
        UpdateData = new javax.swing.JButton();
        deleteData = new javax.swing.JButton();
        updateIdDataId = new javax.swing.JTextField();
        deletId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Show All Data");

        jScrollPane1.setPreferredSize(null);

        ShowTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "Name", "Age", "Gender"
            }
        ));
        ShowTable.setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        jScrollPane1.setViewportView(ShowTable);
        if (ShowTable.getColumnModel().getColumnCount() > 0) {
            ShowTable.getColumnModel().getColumn(0).setHeaderValue("id");
            ShowTable.getColumnModel().getColumn(1).setHeaderValue("Name");
            ShowTable.getColumnModel().getColumn(2).setHeaderValue("Age");
            ShowTable.getColumnModel().getColumn(3).setHeaderValue("Gender");
        }

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setText("All Data From Database");

        SearchDataAll.setText("Search Data");
        SearchDataAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchDataAllActionPerformed(evt);
            }
        });

        GoHomeAll.setText("Go Home");
        GoHomeAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoHomeAllActionPerformed(evt);
            }
        });

        UpdateData.setText("Update Data");
        UpdateData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateDataActionPerformed(evt);
            }
        });

        deleteData.setText("Delete Data");
        deleteData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDataActionPerformed(evt);
            }
        });

        updateIdDataId.setText("Id");
        updateIdDataId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateIdDataIdActionPerformed(evt);
            }
        });

        deletId.setText("Id");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(49, 49, 49)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(updateIdDataId)
                                .addComponent(UpdateData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SearchDataAll, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(deleteData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(GoHomeAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deletId, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(SearchDataAll)
                        .addGap(45, 45, 45)
                        .addComponent(updateIdDataId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UpdateData))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(GoHomeAll)
                        .addGap(45, 45, 45)
                        .addComponent(deletId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteData)))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GoHomeAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoHomeAllActionPerformed
        DataAddForm dataAddForm = new DataAddForm();
        dataAddForm.setVisible(true);
        this.dispose();        
    }//GEN-LAST:event_GoHomeAllActionPerformed

    private void SearchDataAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchDataAllActionPerformed
        SearchData searchData = new SearchData();
        searchData.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SearchDataAllActionPerformed

    private void UpdateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateDataActionPerformed
        
        String selectedId = updateIdDataId.getText();
        
        if(selectedId.isEmpty()){
            JOptionPane.showMessageDialog(null, "Your input field is empty");
        } else if (checkIfDataExist.isExist(selectedId)){
            UpdateDataFromDataBase updateDataFromDataBase = new UpdateDataFromDataBase(selectedId);
            updateDataFromDataBase.setVisible(true);
            this.dispose();
        }else {
            JOptionPane.showMessageDialog(null, selectedId + " No data found!");
        }
        
    }//GEN-LAST:event_UpdateDataActionPerformed

    private void deleteDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDataActionPerformed
        String deleteId = deletId.getText();
        
        if(deleteId.isEmpty()){
            JOptionPane.showMessageDialog(null, "You input field is empty");
        }else if(checkIfDataExist.isExist(deleteId)) {
            try (Connection conn = Connector.connectDB()) {
                PreparedStatement ps = conn.prepareStatement("DELETE FROM datatable WHERE id=? ");
                ps.setString(1, deleteId);
                ps.executeUpdate();
                dataShowInTable();
                JOptionPane.showMessageDialog(null, "Data Deleted Successfully");
            } catch (SQLException e) {
                Logger.getLogger(ShowDataTable.class.getName()).log(Level.SEVERE, "Error is: ", e);
            } 
        }else {
            JOptionPane.showMessageDialog(null, deleteId + " Id Not Found!");
        }
        
        
       
    }//GEN-LAST:event_deleteDataActionPerformed

    
    private void updateIdDataIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateIdDataIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateIdDataIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ShowDataTable().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GoHomeAll;
    private javax.swing.JButton SearchDataAll;
    private javax.swing.JTable ShowTable;
    private javax.swing.JButton UpdateData;
    private javax.swing.JTextField deletId;
    private javax.swing.JButton deleteData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField updateIdDataId;
    // End of variables declaration//GEN-END:variables
}
